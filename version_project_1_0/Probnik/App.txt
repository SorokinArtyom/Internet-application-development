import './App.css';
import React, {useEffect, useState, useReducer} from 'react';
import {Card, Col, Row, Button, Spinner} from "react-bootstrap";
import InputField from "./InputField";
import {type} from "@testing-library/user-event/dist/type";

// function App() {
//   return (
//       <div className="App">
//       <script src="like_button.js"></script>
//       </div>
//   );
// }
//
// export default App;

// const requestURL = `http://127.0.0.1:8000/Stavki`
// const body = {
//     name: 'Polzovatel1',
//     stavka_id: 100,
//     summa_stavki: 2000,
//     time: '05.12.2022 23:47'
// }
//
// function sendRequest(method, url, body = null) {
//     const headers = {
//         'Content-Type': 'application/json'
//     }
//     return fetch(url, {
//         method: method,
//         body: JSON.stringify(body),
//         headers: headers
//     }).then(response => {
//         if (response.ok) {
//             return response.json()
//         }
//         return response.json().then(error => {
//             const e = new Error('Что-то пошло не так')
//             e.data = error
//             throw e
//         })
//     })
// }
//
// sendRequest('POST', requestURL, body)
//     .then(data => console.log(data))
//     .catch(err => console.log(err))






function init(state) {

    console.log(state);
    return state
}



function reducer (state, action){
    switch (action.type)
    {
        case 'team':
            return {
                ...state,
                team: action.payload
            }
        case 'search_team':
            return {
                ...state,
                searchValue: action.searchValue
            }
        case 'load':
            return {
                ...state,
                loading: action.loading
            }
        case 'load_back':
            return {
                ...state,
                loading: !state.loading
            }

        case 'reset':
            return init(action.payload);

        default: return state;
    }
}


const getTeamByID = async (name = 'Faze') =>{
    const res = await fetch(`http://127.0.0.1:8000/find/?search=${name}`)
        //const res = axios.get(`http://127.0.0.1:8000/find/?format=json&search=${name}`)
        .then((response) => {
            return response.json();
        }).catch(()=>{
            return {resultCount:0, results:[]}
        })
    return res
}


function TeamsPage() {

    // const [searchValue, setSearchValue] = useState('Faze');
    // const [loading, setLoading] = useState(false)
    // const [team, setTeam] = useState([])
    const setSearchValue = (setValue) =>{
        dispatch({setValue})
    }


    const [data, dispatch] = useReducer(reducer, {searchValue: 'Faze', loading: false, team: []}, init)
   // const [filter, setFilter] = useState('');
    const handleSearch = async () =>{

        // dispatch({type: "reset", payload: {searchValue: 'Faze', loading: true, team: []}})

        //await setLoading(true);
        dispatch({type: "load", payload: true})
        const results = await getTeamByID(data.searchValue);
        console.log(getTeamByID(data.searchValue));
        //console.log(results);
        //console.log(results);
        //await setTeam(results);
        dispatch({type: "team", payload: results })
        //await setLoading(false)
        dispatch({type: "load", payload: false})


    }
    // const handleFilter = ()=> {
    //     setTeam(Team => Team.filter(item=>item.name && item.name.includes(filter)));
    // }

    return (
        <div className={`container ${data.loading && 'containerLoading'}`}>
            {data.loading && <div className="loadingBg"><Spinner animation="border"/></div>}
            <InputField value={data.searchValue} setValue={setSearchValue} placeholder="поиск" loading={data.loading} onSubmit={handleSearch} buttonTitle="Искать"/>
            {data.loading && <div className="loadingBg"><Spinner animation="border"/></div>}
            {!data.team.length && <div>
                <p><font size="10" color="#72efe9" face="serif">К сожалению, пока ничего не найдено :( </font> </p>
            </div>}
            <div>
                <Row xs={4} md={4} className="g-4" >
                {data.team.map((item, index)=>{
                    return<Col >
                <p> <font size="8" color="#72efe9" face="serif"> {index + 1}) {item.name} {item.cap} </font></p>
                    </Col>

                        })}
                </Row>

            </div>

            {/*<Row xs={4} md={4} className="g-4">*/}
            {/*    {team.map((item, index)=>{*/}
            {/*        return<Col >*/}
            {/*            <Card key={index} className="card">*/}
            {/*                <Card.Body>*/}
            {/*                    <div className="textStyle">*/}
            {/*                        <Card.Title>{item.name}</Card.Title>*/}
            {/*                    </div>*/}
            {/*                    <div  className="textStyle">*/}
            {/*                        <Card.Text>*/}
            {/*                            {item.dicription}*/}
            {/*                        </Card.Text>*/}
            {/*                    </div>*/}
            {/*                    <Button className="cardButton" href={item.cap} target="_blank" variant="primary">Открыть в ITunes</Button>*/}
            {/*                </Card.Body>*/}
            {/*            </Card>*/}
            {/*        </Col>*/}
            {/*    })}*/}
            {/*</Row>*/}



        </div>


    );

}
export default TeamsPage;


// const NewHOC = (InputField) => {
//     return class extends React.Component {
//         render() {
//             return (
//                 <div>
//                     <InputField {...this.props} />
//                 </div>
//             )
//         }
//     }
// }
//
// const Team = ({name}) => <div>{name}</div>
//
// const NewComponent = NewHOC(Movie);
//
// function App() {
//     return (
//         <div>
//             <NewComponent name="Kill Bill" />
//         </div>
//     );
// }
//
// const rootElement = document.getElementById("root");
// ReactDOM.render(<App />, rootElement);